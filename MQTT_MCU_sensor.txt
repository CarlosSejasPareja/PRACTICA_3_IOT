#include <WiFi.h>
#include <PubSubClient.h>
#define TRIG_PIN 5
#define ECHO_PIN 18

const char * WIFI_SSID = "UCB-PREMIUM";
const char * WIFI_PASS = "lacatoucb";
const char * MQTT_BROKER = "broker.hivemq.com";
const int MQTT_BROKER_PORT = 1883;
const char * MQTT_CLIENT_ID = "centerpantetatenario";
const char * PUBLISH_TOPIC = "ucb/cobos/output";

WiFiClient wiFiClient;
PubSubClient mqttClient(wiFiClient);


long readUltrasonicDistance(int triggerPin, int echoPin) {
  pinMode(triggerPin, OUTPUT);
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}

boolean mqttClientConnect() {
  Serial.print("Connecting to " + String(MQTT_BROKER));
  if (mqttClient.connect(MQTT_CLIENT_ID)) {
    Serial.println(" DONE!");
  } else {
    Serial.println("Can't connect to " + String(MQTT_BROKER));
  }
  return mqttClient.connected();
}

void setup() {

  Serial.begin(115200);
  Serial.print("Connecting to " + String(WIFI_SSID));

  WiFi.begin(WIFI_SSID, WIFI_PASS);
  while (WiFi.status() != WL_CONNECTED) {
    delay(200);
    Serial.print(".");
  }
  Serial.println(" DONE!");

  mqttClient.setServer(MQTT_BROKER, MQTT_BROKER_PORT);
}

unsigned long PREVIOUS_CONNECT_MILLIS = 0;
unsigned long PREVIOUS_PUBLISH_MILLIS = 0;

void loop() {
  unsigned long now = millis();
  if (!mqttClient.connected()) {
    if (now - PREVIOUS_CONNECT_MILLIS >= 2000) {
      PREVIOUS_CONNECT_MILLIS = now;
      if (mqttClientConnect()) PREVIOUS_CONNECT_MILLIS = 0;
      else delay(1000);
    }
  } else { 
    mqttClient.loop();
    delay(20);
    if (now - PREVIOUS_PUBLISH_MILLIS >= 500) {
      PREVIOUS_PUBLISH_MILLIS = now;
      long timeMeasure = readUltrasonicDistance(TRIG_PIN, ECHO_PIN);
      float distance = 0.01723 * timeMeasure;
      String message = " " + String(distance);
      mqttClient.publish(PUBLISH_TOPIC, message.c_str());
    }
  }
}
